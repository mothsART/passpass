#!/usr/bin/env python3
'''
Random Password : compatible with AZERTY, QWERTY and QWERTZ
Author: Ferry Jérémie
'''
import os
import sys
import random
import string
import getopt


__version__ = "0.1"


class CliOption:
    def __init__(self, short, verbose, description):
        self._list = [short, verbose]
        self.description = description

    def __contains__(self, value):
        return value in self._list

    def __str__(self):
        return ''.join((
            '%s   %s' % (self._list[0], self._list[1]),
            self.description
        ))


class CliOptions:
    @staticmethod
    def help_view():
        return CliOption(
            '-h', '--help',
            '              show usage information\n'
        )

    @staticmethod
    def version():
        return CliOption(
            '-v', '--version',
            '           show version information\n'
        )

    @staticmethod
    def length():
        return CliOption(
            '-l', '--length',
            '            define password length\n'
        )

    @staticmethod
    def disable_symbols():
        return CliOption(
            '-d', '--d-symbols',
            '         disable symbols like : -+*/.\n'
        )


def get_version():
    return '%s version %s' % (__file__.replace('./', ''), __version__)


def cli_help():
    value = (
        '%s\n' % get_version(),
        str(CliOptions.help_view()),
        str(CliOptions.version()),
        str(CliOptions.length()),
        str(CliOptions.disable_symbols())
    )
    return ''.join(value)


def give_pass(length, has_symbols=True):
    lower = 'bcdefghijklnoprstuvx'
    upper = 'BCDEFGHIJKLNOPRSTUVX'
    num = string.digits
    symbols = '-+*/.'
    _all = lower + upper + num
    if has_symbols:
        _all += symbols
    return "".join(random.sample(_all, length))


if __name__ == '__main__':
    length = 20
    has_symbols = True
    try:
        opts, args = getopt.getopt(
            sys.argv[1:],
            'hvl:d',
            [
                'help',
                'version',
                'length=',
                'disable_symbols='
            ]
        )
    except getopt.GetoptError:
        print(cli_help())
        exit(os.EX_USAGE)
    if len(opts) == 0:
        print(give_pass(length))
        exit(os.EX_OK)

    for opt, arg in opts:
        if opt in CliOptions.help_view():
            print(cli_help())
            exit(os.EX_OK)
        if opt in CliOptions.version():
            print(get_version())
            exit(os.EX_OK)
        elif opt in CliOptions.length():
            try:
                length = int(arg)
            except ValueError:
                print('length isn\'t an integer value')
                exit(os.EX_USAGE)
        if opt in CliOptions.disable_symbols():
            has_symbols = False
    if length < 10:
        print('A password of less than 10 characters isn\'t secure')
    print(give_pass(length, has_symbols))
